# NOT for production usage.
services:
  server:
    container_name: nest
    image: nest-dev:latest
    build:
      context: .
      tags:
        - nest-dev:latest
    environment:
      NODE_ENV: development
    env_file:
      - .env
    develop:
      watch:
        - action: sync
          path: ./src
          target: /home/node/app/src
        - action: rebuild
          path: package.json
    ports:
      - "3000:3000"
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-tier

  database:
    container_name: postgres-dev
    restart: always
    image: postgres:16.9-bookworm
    volumes:
      - ./data:/var/lib/postgresql/data
    env_file:
      - database/.env
    ports:
      - "5432:5432"
    networks:
      - app-tier
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB || exit 1
      interval: 5s
      timeout: 5s
      retries: 2
      start_period: 5s

  redis:
    container_name: redis
    restart: always
    image: redis:7.4-bookworm
    ports:
      - "6379:6379"
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - app-tier
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 2
      start_period: 2s


networks:
  app-tier: